// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.2
// source: iam.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Principal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Principal) Reset() {
	*x = Principal{}
	mi := &file_iam_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Principal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Principal) ProtoMessage() {}

func (x *Principal) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Principal.ProtoReflect.Descriptor instead.
func (*Principal) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{0}
}

func (x *Principal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ns            string                 `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	Obj           string                 `protobuf:"bytes,2,opt,name=obj,proto3" json:"obj,omitempty"`
	Rel           string                 `protobuf:"bytes,3,opt,name=rel,proto3" json:"rel,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	Ts            string                 `protobuf:"bytes,5,opt,name=ts,proto3" json:"ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	mi := &file_iam_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{1}
}

func (x *CheckRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *CheckRequest) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *CheckRequest) GetRel() string {
	if x != nil {
		return x.Rel
	}
	return ""
}

func (x *CheckRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckRequest) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

type CheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Principal     *Principal             `protobuf:"bytes,1,opt,name=principal,proto3,oneof" json:"principal,omitempty"`
	Ok            bool                   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckResponse) Reset() {
	*x = CheckResponse{}
	mi := &file_iam_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse) ProtoMessage() {}

func (x *CheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse.ProtoReflect.Descriptor instead.
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{2}
}

func (x *CheckResponse) GetPrincipal() *Principal {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *CheckResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ContentChangeCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ns            string                 `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	Obj           string                 `protobuf:"bytes,2,opt,name=obj,proto3" json:"obj,omitempty"`
	Rel           string                 `protobuf:"bytes,3,opt,name=rel,proto3" json:"rel,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentChangeCheckRequest) Reset() {
	*x = ContentChangeCheckRequest{}
	mi := &file_iam_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentChangeCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentChangeCheckRequest) ProtoMessage() {}

func (x *ContentChangeCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentChangeCheckRequest.ProtoReflect.Descriptor instead.
func (*ContentChangeCheckRequest) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{3}
}

func (x *ContentChangeCheckRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *ContentChangeCheckRequest) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *ContentChangeCheckRequest) GetRel() string {
	if x != nil {
		return x.Rel
	}
	return ""
}

func (x *ContentChangeCheckRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ContentChangeCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	Ts            string                 `protobuf:"bytes,3,opt,name=ts,proto3" json:"ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentChangeCheckResponse) Reset() {
	*x = ContentChangeCheckResponse{}
	mi := &file_iam_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentChangeCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentChangeCheckResponse) ProtoMessage() {}

func (x *ContentChangeCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentChangeCheckResponse.ProtoReflect.Descriptor instead.
func (*ContentChangeCheckResponse) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{4}
}

func (x *ContentChangeCheckResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ContentChangeCheckResponse) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

type ListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ns            string                 `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	Rel           string                 `protobuf:"bytes,3,opt,name=rel,proto3" json:"rel,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	Ts            string                 `protobuf:"bytes,5,opt,name=ts,proto3" json:"ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_iam_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{5}
}

func (x *ListRequest) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *ListRequest) GetRel() string {
	if x != nil {
		return x.Rel
	}
	return ""
}

func (x *ListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListRequest) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Objs          []string               `protobuf:"bytes,1,rep,name=objs,proto3" json:"objs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_iam_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{6}
}

func (x *ListResponse) GetObjs() []string {
	if x != nil {
		return x.Objs
	}
	return nil
}

type UserSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ns            string                 `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	Obj           string                 `protobuf:"bytes,2,opt,name=obj,proto3" json:"obj,omitempty"`
	Rel           string                 `protobuf:"bytes,3,opt,name=rel,proto3" json:"rel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserSet) Reset() {
	*x = UserSet{}
	mi := &file_iam_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSet) ProtoMessage() {}

func (x *UserSet) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSet.ProtoReflect.Descriptor instead.
func (*UserSet) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{7}
}

func (x *UserSet) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *UserSet) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *UserSet) GetRel() string {
	if x != nil {
		return x.Rel
	}
	return ""
}

type Tuple struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Ns    string                 `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	Obj   string                 `protobuf:"bytes,2,opt,name=obj,proto3" json:"obj,omitempty"`
	Rel   string                 `protobuf:"bytes,3,opt,name=rel,proto3" json:"rel,omitempty"`
	// Types that are valid to be assigned to User:
	//
	//	*Tuple_UserId
	//	*Tuple_UserSet
	User isTuple_User `protobuf_oneof:"user"`
	// Types that are valid to be assigned to Condition:
	//
	//	*Tuple_Expires
	Condition     isTuple_Condition `protobuf_oneof:"condition"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tuple) Reset() {
	*x = Tuple{}
	mi := &file_iam_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tuple) ProtoMessage() {}

func (x *Tuple) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tuple.ProtoReflect.Descriptor instead.
func (*Tuple) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{8}
}

func (x *Tuple) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *Tuple) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *Tuple) GetRel() string {
	if x != nil {
		return x.Rel
	}
	return ""
}

func (x *Tuple) GetUser() isTuple_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Tuple) GetUserId() string {
	if x != nil {
		if x, ok := x.User.(*Tuple_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *Tuple) GetUserSet() *UserSet {
	if x != nil {
		if x, ok := x.User.(*Tuple_UserSet); ok {
			return x.UserSet
		}
	}
	return nil
}

func (x *Tuple) GetCondition() isTuple_Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *Tuple) GetExpires() int64 {
	if x != nil {
		if x, ok := x.Condition.(*Tuple_Expires); ok {
			return x.Expires
		}
	}
	return 0
}

type isTuple_User interface {
	isTuple_User()
}

type Tuple_UserId struct {
	UserId string `protobuf:"bytes,4,opt,name=userId,proto3,oneof"`
}

type Tuple_UserSet struct {
	UserSet *UserSet `protobuf:"bytes,5,opt,name=userSet,proto3,oneof"`
}

func (*Tuple_UserId) isTuple_User() {}

func (*Tuple_UserSet) isTuple_User() {}

type isTuple_Condition interface {
	isTuple_Condition()
}

type Tuple_Expires struct {
	Expires int64 `protobuf:"varint,6,opt,name=expires,proto3,oneof"`
}

func (*Tuple_Expires) isTuple_Condition() {}

type TupleSet struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Ns    string                 `protobuf:"bytes,1,opt,name=ns,proto3" json:"ns,omitempty"`
	// Types that are valid to be assigned to Spec:
	//
	//	*TupleSet_TupleSpec_
	//	*TupleSet_ObjectSpec_
	//	*TupleSet_UsersetSpec
	Spec          isTupleSet_Spec `protobuf_oneof:"spec"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TupleSet) Reset() {
	*x = TupleSet{}
	mi := &file_iam_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TupleSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TupleSet) ProtoMessage() {}

func (x *TupleSet) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TupleSet.ProtoReflect.Descriptor instead.
func (*TupleSet) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{9}
}

func (x *TupleSet) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *TupleSet) GetSpec() isTupleSet_Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *TupleSet) GetTupleSpec() *TupleSet_TupleSpec {
	if x != nil {
		if x, ok := x.Spec.(*TupleSet_TupleSpec_); ok {
			return x.TupleSpec
		}
	}
	return nil
}

func (x *TupleSet) GetObjectSpec() *TupleSet_ObjectSpec {
	if x != nil {
		if x, ok := x.Spec.(*TupleSet_ObjectSpec_); ok {
			return x.ObjectSpec
		}
	}
	return nil
}

func (x *TupleSet) GetUsersetSpec() *TupleSet_UserSetSpec {
	if x != nil {
		if x, ok := x.Spec.(*TupleSet_UsersetSpec); ok {
			return x.UsersetSpec
		}
	}
	return nil
}

type isTupleSet_Spec interface {
	isTupleSet_Spec()
}

type TupleSet_TupleSpec_ struct {
	TupleSpec *TupleSet_TupleSpec `protobuf:"bytes,2,opt,name=tuple_spec,json=tupleSpec,proto3,oneof"`
}

type TupleSet_ObjectSpec_ struct {
	ObjectSpec *TupleSet_ObjectSpec `protobuf:"bytes,3,opt,name=object_spec,json=objectSpec,proto3,oneof"`
}

type TupleSet_UsersetSpec struct {
	UsersetSpec *TupleSet_UserSetSpec `protobuf:"bytes,4,opt,name=userset_spec,json=usersetSpec,proto3,oneof"`
}

func (*TupleSet_TupleSpec_) isTupleSet_Spec() {}

func (*TupleSet_ObjectSpec_) isTupleSet_Spec() {}

func (*TupleSet_UsersetSpec) isTupleSet_Spec() {}

type ReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ts            *string                `protobuf:"bytes,1,opt,name=ts,proto3,oneof" json:"ts,omitempty"`
	Tuplesets     []*TupleSet            `protobuf:"bytes,2,rep,name=tuplesets,proto3" json:"tuplesets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_iam_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{10}
}

func (x *ReadRequest) GetTs() string {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return ""
}

func (x *ReadRequest) GetTuplesets() []*TupleSet {
	if x != nil {
		return x.Tuplesets
	}
	return nil
}

type ReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ts            string                 `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Tuples        []*Tuple               `protobuf:"bytes,2,rep,name=tuples,proto3" json:"tuples,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_iam_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{11}
}

func (x *ReadResponse) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *ReadResponse) GetTuples() []*Tuple {
	if x != nil {
		return x.Tuples
	}
	return nil
}

type WriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ts            *string                `protobuf:"bytes,1,opt,name=ts,proto3,oneof" json:"ts,omitempty"`
	AddTuples     []*Tuple               `protobuf:"bytes,2,rep,name=add_tuples,json=addTuples,proto3" json:"add_tuples,omitempty"`
	DelTuples     []*Tuple               `protobuf:"bytes,3,rep,name=del_tuples,json=delTuples,proto3" json:"del_tuples,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	mi := &file_iam_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{12}
}

func (x *WriteRequest) GetTs() string {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return ""
}

func (x *WriteRequest) GetAddTuples() []*Tuple {
	if x != nil {
		return x.AddTuples
	}
	return nil
}

func (x *WriteRequest) GetDelTuples() []*Tuple {
	if x != nil {
		return x.DelTuples
	}
	return nil
}

type WriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ts            string                 `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	mi := &file_iam_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResponse.ProtoReflect.Descriptor instead.
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{13}
}

func (x *WriteResponse) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

type TupleSet_TupleSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Obj   string                 `protobuf:"bytes,2,opt,name=obj,proto3" json:"obj,omitempty"`
	Rel   string                 `protobuf:"bytes,3,opt,name=rel,proto3" json:"rel,omitempty"`
	// Types that are valid to be assigned to User:
	//
	//	*TupleSet_TupleSpec_UserId
	//	*TupleSet_TupleSpec_UserSet
	User          isTupleSet_TupleSpec_User `protobuf_oneof:"user"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TupleSet_TupleSpec) Reset() {
	*x = TupleSet_TupleSpec{}
	mi := &file_iam_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TupleSet_TupleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TupleSet_TupleSpec) ProtoMessage() {}

func (x *TupleSet_TupleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TupleSet_TupleSpec.ProtoReflect.Descriptor instead.
func (*TupleSet_TupleSpec) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{9, 0}
}

func (x *TupleSet_TupleSpec) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *TupleSet_TupleSpec) GetRel() string {
	if x != nil {
		return x.Rel
	}
	return ""
}

func (x *TupleSet_TupleSpec) GetUser() isTupleSet_TupleSpec_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *TupleSet_TupleSpec) GetUserId() string {
	if x != nil {
		if x, ok := x.User.(*TupleSet_TupleSpec_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *TupleSet_TupleSpec) GetUserSet() *UserSet {
	if x != nil {
		if x, ok := x.User.(*TupleSet_TupleSpec_UserSet); ok {
			return x.UserSet
		}
	}
	return nil
}

type isTupleSet_TupleSpec_User interface {
	isTupleSet_TupleSpec_User()
}

type TupleSet_TupleSpec_UserId struct {
	UserId string `protobuf:"bytes,4,opt,name=userId,proto3,oneof"`
}

type TupleSet_TupleSpec_UserSet struct {
	UserSet *UserSet `protobuf:"bytes,5,opt,name=userSet,proto3,oneof"`
}

func (*TupleSet_TupleSpec_UserId) isTupleSet_TupleSpec_User() {}

func (*TupleSet_TupleSpec_UserSet) isTupleSet_TupleSpec_User() {}

type TupleSet_ObjectSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Obj           string                 `protobuf:"bytes,1,opt,name=obj,proto3" json:"obj,omitempty"`
	Relation      *string                `protobuf:"bytes,2,opt,name=relation,proto3,oneof" json:"relation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TupleSet_ObjectSpec) Reset() {
	*x = TupleSet_ObjectSpec{}
	mi := &file_iam_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TupleSet_ObjectSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TupleSet_ObjectSpec) ProtoMessage() {}

func (x *TupleSet_ObjectSpec) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TupleSet_ObjectSpec.ProtoReflect.Descriptor instead.
func (*TupleSet_ObjectSpec) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{9, 1}
}

func (x *TupleSet_ObjectSpec) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *TupleSet_ObjectSpec) GetRelation() string {
	if x != nil && x.Relation != nil {
		return *x.Relation
	}
	return ""
}

type TupleSet_UserSetSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserSet       string                 `protobuf:"bytes,1,opt,name=UserSet,proto3" json:"UserSet,omitempty"`
	Relation      *string                `protobuf:"bytes,3,opt,name=relation,proto3,oneof" json:"relation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TupleSet_UserSetSpec) Reset() {
	*x = TupleSet_UserSetSpec{}
	mi := &file_iam_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TupleSet_UserSetSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TupleSet_UserSetSpec) ProtoMessage() {}

func (x *TupleSet_UserSetSpec) ProtoReflect() protoreflect.Message {
	mi := &file_iam_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TupleSet_UserSetSpec.ProtoReflect.Descriptor instead.
func (*TupleSet_UserSetSpec) Descriptor() ([]byte, []int) {
	return file_iam_proto_rawDescGZIP(), []int{9, 2}
}

func (x *TupleSet_UserSetSpec) GetUserSet() string {
	if x != nil {
		return x.UserSet
	}
	return ""
}

func (x *TupleSet_UserSetSpec) GetRelation() string {
	if x != nil && x.Relation != nil {
		return *x.Relation
	}
	return ""
}

var File_iam_proto protoreflect.FileDescriptor

const file_iam_proto_rawDesc = "" +
	"\n" +
	"\tiam.proto\x12\x02am\x1a\x1bgoogle/protobuf/empty.proto\"\x1b\n" +
	"\tPrincipal\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"j\n" +
	"\fCheckRequest\x12\x0e\n" +
	"\x02ns\x18\x01 \x01(\tR\x02ns\x12\x10\n" +
	"\x03obj\x18\x02 \x01(\tR\x03obj\x12\x10\n" +
	"\x03rel\x18\x03 \x01(\tR\x03rel\x12\x16\n" +
	"\x06userId\x18\x04 \x01(\tR\x06userId\x12\x0e\n" +
	"\x02ts\x18\x05 \x01(\tR\x02ts\"_\n" +
	"\rCheckResponse\x120\n" +
	"\tprincipal\x18\x01 \x01(\v2\r.am.PrincipalH\x00R\tprincipal\x88\x01\x01\x12\x0e\n" +
	"\x02ok\x18\x02 \x01(\bR\x02okB\f\n" +
	"\n" +
	"_principal\"g\n" +
	"\x19ContentChangeCheckRequest\x12\x0e\n" +
	"\x02ns\x18\x01 \x01(\tR\x02ns\x12\x10\n" +
	"\x03obj\x18\x02 \x01(\tR\x03obj\x12\x10\n" +
	"\x03rel\x18\x03 \x01(\tR\x03rel\x12\x16\n" +
	"\x06userId\x18\x04 \x01(\tR\x06userId\"<\n" +
	"\x1aContentChangeCheckResponse\x12\x0e\n" +
	"\x02ok\x18\x02 \x01(\bR\x02ok\x12\x0e\n" +
	"\x02ts\x18\x03 \x01(\tR\x02ts\"W\n" +
	"\vListRequest\x12\x0e\n" +
	"\x02ns\x18\x01 \x01(\tR\x02ns\x12\x10\n" +
	"\x03rel\x18\x03 \x01(\tR\x03rel\x12\x16\n" +
	"\x06userId\x18\x04 \x01(\tR\x06userId\x12\x0e\n" +
	"\x02ts\x18\x05 \x01(\tR\x02ts\"\"\n" +
	"\fListResponse\x12\x12\n" +
	"\x04objs\x18\x01 \x03(\tR\x04objs\"=\n" +
	"\aUserSet\x12\x0e\n" +
	"\x02ns\x18\x01 \x01(\tR\x02ns\x12\x10\n" +
	"\x03obj\x18\x02 \x01(\tR\x03obj\x12\x10\n" +
	"\x03rel\x18\x03 \x01(\tR\x03rel\"\xaf\x01\n" +
	"\x05Tuple\x12\x0e\n" +
	"\x02ns\x18\x01 \x01(\tR\x02ns\x12\x10\n" +
	"\x03obj\x18\x02 \x01(\tR\x03obj\x12\x10\n" +
	"\x03rel\x18\x03 \x01(\tR\x03rel\x12\x18\n" +
	"\x06userId\x18\x04 \x01(\tH\x00R\x06userId\x12'\n" +
	"\auserSet\x18\x05 \x01(\v2\v.am.UserSetH\x00R\auserSet\x12\x1a\n" +
	"\aexpires\x18\x06 \x01(\x03H\x01R\aexpiresB\x06\n" +
	"\x04userB\v\n" +
	"\tcondition\"\xf7\x03\n" +
	"\bTupleSet\x12\x0e\n" +
	"\x02ns\x18\x01 \x01(\tR\x02ns\x127\n" +
	"\n" +
	"tuple_spec\x18\x02 \x01(\v2\x16.am.TupleSet.TupleSpecH\x00R\ttupleSpec\x12:\n" +
	"\vobject_spec\x18\x03 \x01(\v2\x17.am.TupleSet.ObjectSpecH\x00R\n" +
	"objectSpec\x12=\n" +
	"\fuserset_spec\x18\x04 \x01(\v2\x18.am.TupleSet.UserSetSpecH\x00R\vusersetSpec\x1az\n" +
	"\tTupleSpec\x12\x10\n" +
	"\x03obj\x18\x02 \x01(\tR\x03obj\x12\x10\n" +
	"\x03rel\x18\x03 \x01(\tR\x03rel\x12\x18\n" +
	"\x06userId\x18\x04 \x01(\tH\x00R\x06userId\x12'\n" +
	"\auserSet\x18\x05 \x01(\v2\v.am.UserSetH\x00R\auserSetB\x06\n" +
	"\x04user\x1aL\n" +
	"\n" +
	"ObjectSpec\x12\x10\n" +
	"\x03obj\x18\x01 \x01(\tR\x03obj\x12\x1f\n" +
	"\brelation\x18\x02 \x01(\tH\x00R\brelation\x88\x01\x01B\v\n" +
	"\t_relation\x1aU\n" +
	"\vUserSetSpec\x12\x18\n" +
	"\aUserSet\x18\x01 \x01(\tR\aUserSet\x12\x1f\n" +
	"\brelation\x18\x03 \x01(\tH\x00R\brelation\x88\x01\x01B\v\n" +
	"\t_relationB\x06\n" +
	"\x04spec\"U\n" +
	"\vReadRequest\x12\x13\n" +
	"\x02ts\x18\x01 \x01(\tH\x00R\x02ts\x88\x01\x01\x12*\n" +
	"\ttuplesets\x18\x02 \x03(\v2\f.am.TupleSetR\ttuplesetsB\x05\n" +
	"\x03_ts\"A\n" +
	"\fReadResponse\x12\x0e\n" +
	"\x02ts\x18\x01 \x01(\tR\x02ts\x12!\n" +
	"\x06tuples\x18\x02 \x03(\v2\t.am.TupleR\x06tuples\"~\n" +
	"\fWriteRequest\x12\x13\n" +
	"\x02ts\x18\x01 \x01(\tH\x00R\x02ts\x88\x01\x01\x12(\n" +
	"\n" +
	"add_tuples\x18\x02 \x03(\v2\t.am.TupleR\taddTuples\x12(\n" +
	"\n" +
	"del_tuples\x18\x03 \x03(\v2\t.am.TupleR\tdelTuplesB\x05\n" +
	"\x03_ts\"\x1f\n" +
	"\rWriteResponse\x12\x0e\n" +
	"\x02ts\x18\x01 \x01(\tR\x02ts2\x97\x02\n" +
	"\fCheckService\x12,\n" +
	"\x05check\x12\x10.am.CheckRequest\x1a\x11.am.CheckResponse\x12U\n" +
	"\x14content_change_check\x12\x1d.am.ContentChangeCheckRequest\x1a\x1e.am.ContentChangeCheckResponse\x12)\n" +
	"\x04list\x12\x0f.am.ListRequest\x1a\x10.am.ListResponse\x12)\n" +
	"\x04read\x12\x0f.am.ReadRequest\x1a\x10.am.ReadResponse\x12,\n" +
	"\x05write\x12\x10.am.WriteRequest\x1a\x11.am.WriteResponseB\x04Z\x02./b\x06proto3"

var (
	file_iam_proto_rawDescOnce sync.Once
	file_iam_proto_rawDescData []byte
)

func file_iam_proto_rawDescGZIP() []byte {
	file_iam_proto_rawDescOnce.Do(func() {
		file_iam_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_iam_proto_rawDesc), len(file_iam_proto_rawDesc)))
	})
	return file_iam_proto_rawDescData
}

var file_iam_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_iam_proto_goTypes = []any{
	(*Principal)(nil),                  // 0: am.Principal
	(*CheckRequest)(nil),               // 1: am.CheckRequest
	(*CheckResponse)(nil),              // 2: am.CheckResponse
	(*ContentChangeCheckRequest)(nil),  // 3: am.ContentChangeCheckRequest
	(*ContentChangeCheckResponse)(nil), // 4: am.ContentChangeCheckResponse
	(*ListRequest)(nil),                // 5: am.ListRequest
	(*ListResponse)(nil),               // 6: am.ListResponse
	(*UserSet)(nil),                    // 7: am.UserSet
	(*Tuple)(nil),                      // 8: am.Tuple
	(*TupleSet)(nil),                   // 9: am.TupleSet
	(*ReadRequest)(nil),                // 10: am.ReadRequest
	(*ReadResponse)(nil),               // 11: am.ReadResponse
	(*WriteRequest)(nil),               // 12: am.WriteRequest
	(*WriteResponse)(nil),              // 13: am.WriteResponse
	(*TupleSet_TupleSpec)(nil),         // 14: am.TupleSet.TupleSpec
	(*TupleSet_ObjectSpec)(nil),        // 15: am.TupleSet.ObjectSpec
	(*TupleSet_UserSetSpec)(nil),       // 16: am.TupleSet.UserSetSpec
}
var file_iam_proto_depIdxs = []int32{
	0,  // 0: am.CheckResponse.principal:type_name -> am.Principal
	7,  // 1: am.Tuple.userSet:type_name -> am.UserSet
	14, // 2: am.TupleSet.tuple_spec:type_name -> am.TupleSet.TupleSpec
	15, // 3: am.TupleSet.object_spec:type_name -> am.TupleSet.ObjectSpec
	16, // 4: am.TupleSet.userset_spec:type_name -> am.TupleSet.UserSetSpec
	9,  // 5: am.ReadRequest.tuplesets:type_name -> am.TupleSet
	8,  // 6: am.ReadResponse.tuples:type_name -> am.Tuple
	8,  // 7: am.WriteRequest.add_tuples:type_name -> am.Tuple
	8,  // 8: am.WriteRequest.del_tuples:type_name -> am.Tuple
	7,  // 9: am.TupleSet.TupleSpec.userSet:type_name -> am.UserSet
	1,  // 10: am.CheckService.check:input_type -> am.CheckRequest
	3,  // 11: am.CheckService.content_change_check:input_type -> am.ContentChangeCheckRequest
	5,  // 12: am.CheckService.list:input_type -> am.ListRequest
	10, // 13: am.CheckService.read:input_type -> am.ReadRequest
	12, // 14: am.CheckService.write:input_type -> am.WriteRequest
	2,  // 15: am.CheckService.check:output_type -> am.CheckResponse
	4,  // 16: am.CheckService.content_change_check:output_type -> am.ContentChangeCheckResponse
	6,  // 17: am.CheckService.list:output_type -> am.ListResponse
	11, // 18: am.CheckService.read:output_type -> am.ReadResponse
	13, // 19: am.CheckService.write:output_type -> am.WriteResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_iam_proto_init() }
func file_iam_proto_init() {
	if File_iam_proto != nil {
		return
	}
	file_iam_proto_msgTypes[2].OneofWrappers = []any{}
	file_iam_proto_msgTypes[8].OneofWrappers = []any{
		(*Tuple_UserId)(nil),
		(*Tuple_UserSet)(nil),
		(*Tuple_Expires)(nil),
	}
	file_iam_proto_msgTypes[9].OneofWrappers = []any{
		(*TupleSet_TupleSpec_)(nil),
		(*TupleSet_ObjectSpec_)(nil),
		(*TupleSet_UsersetSpec)(nil),
	}
	file_iam_proto_msgTypes[10].OneofWrappers = []any{}
	file_iam_proto_msgTypes[12].OneofWrappers = []any{}
	file_iam_proto_msgTypes[14].OneofWrappers = []any{
		(*TupleSet_TupleSpec_UserId)(nil),
		(*TupleSet_TupleSpec_UserSet)(nil),
	}
	file_iam_proto_msgTypes[15].OneofWrappers = []any{}
	file_iam_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_iam_proto_rawDesc), len(file_iam_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iam_proto_goTypes,
		DependencyIndexes: file_iam_proto_depIdxs,
		MessageInfos:      file_iam_proto_msgTypes,
	}.Build()
	File_iam_proto = out.File
	file_iam_proto_goTypes = nil
	file_iam_proto_depIdxs = nil
}
